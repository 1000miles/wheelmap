{"docs":{"name":"Wheelmap API","info":"\n<h1 id=\"label-Wheelmap.org\">Wheelmap.org</h1>\n\n<p>Wheelmap.org is an online map to search, find and mark\nwheelchair-accessible places. Developers can use our RESTful API to\ninteract with wheelchair accessible place.</p>\n\n<h2 id=\"label-Setup\">Setup</h2>\n\n<p>Before using the Wheelmap API, please read over the Terms of Service and\nsign up for a user account including an API Key.</p>\n\n<h2 id=\"label-Authentication\">Authentication</h2>\n\n<p>All requests to the Wheelmap API service require an api key which is passed\nwith every request.</p>\n\n<h2 id=\"label-Introduction\">Introduction</h2>\n\n<p>The Wheelmap API provides a simple RESTful interface with lightweight\nJSON-formatted responses to use many of wheelmap.org&#39;s website\nfeatures, including nodes, categories to allow both read and write access.\nThis document provides information to developers on how to integrate with\nthe Wheelmap API.</p>\n\n<h2 id=\"label-API+Basics\">API Basics</h2>\n\n<h4 id=\"label-Entry+Points\">Entry Points</h4>\n\n<p>The Wheelmap API has the following entry point: <a\nhref=\"http://wheelmap.org/api\">wheelmap.org/api</a> It is a read-only entry\npoint for public data. It uses the standard parameter api_key for\nauthentication.</p>\n\n<h4 id=\"label-Authentication\">Authentication</h4>\n\n<p>The Wheelmap API requires an api key that is provided during registration.\nThe key identifies your application to the Wheelmap web service, and is\nused to track overall call usage. It&#39;s passed using the standard\napi_key parameter. Alternatively the api_key can be submitted via the\n&#39;X-API-KEY&#39; HTTP header flag.</p>\n\n<h4 id=\"label-API+Requests\">API Requests</h4>\n\n<p>The Wheelmap API uses a RESTful calling style that works with standard HTTP\ncalls. Any web programming language (PHP, Ruby, Perl, Python, Java,\nObjective C, C#\u2026) should be able to make and receive HTTP networking calls;\nconsult the documentation for your language of choice.</p>\n\n<h4 id=\"label-Request+URLs\">Request URLs</h4>\n\n<p>In a RESTful API, each resource or collection of resources is identified by\na unique URL, such as: <a\nhref=\"http://wheelmap.org/api/nodes/:node_id\">wheelmap.org/api/nodes/:node_id</a>\nURL paths contain the unique IDs of resources. These are identified by a\nleading colon, as with :node_id. Before making a call, you must substitute\na valid ID value for these placeholders. ID parameters must appear in the\nURL and cannot be substituted for GET parameters.</p>\n\n<h2 id=\"label-HTTP+Methods\">HTTP Methods</h2>\n\n<p>RESTful APIs use standard HTTP methods to denote actions against a\nresource:</p>\n\n<h4 id=\"label-GET\">GET</h4>\n\n<p>Reads a resource. Returns HTTP status code 200 on success.</p>\n\n<h4 id=\"label-POST\">POST</h4>\n\n<p>Creates a new resource. Returns HTTP status code 202 on success.</p>\n\n<h4 id=\"label-PUT\">PUT</h4>\n\n<p>Updates a resource. Returns HTTP status code 202 on success.</p>\n\n<p>Code 202 means: The request has been accepted for processing, but the\nprocessing has not been completed. The reason why POST and PUT method\nreturn the rather unknown status code 202 is, because the update/create\noperation is not processed immediately. The command will be put on a job\nqueue. Chances are that something goes wrong while execution after the\nPOST/PUT request has been finished. Because some toolkits lack support for\nPUT and DELETE (most notably JavaScript) you can use method overloading to\nfake an HTTP method. Use a POST call and append the standard method\nparameter:</p>\n\n<pre>http://wheelmap.org/api/nodes/:node_id?_method=put</pre>\n\n<h2 id=\"label-API+Responses\">API Responses</h2>\n\n<h5 id=\"label-JSON+Data\">JSON Data</h5>\n\n<p>Data is returned using JSON, a lightweight serialization language that is\ncompatible with many different languages. JSON is also syntactically\ncorrect JavaScript code, which means that it can be parsed with\nJavaScript&#39;s own eval() function. Standard Response Format Each API\nresponse is wrapped in a standard structure that holds the results of the\nAPI call, plus metadata about the request:</p>\n\n<pre>{\n  &quot;conditions&quot;: {\n    &quot;format&quot;: &quot;json&quot;\n  },\n  &quot;meta&quot;: {\n    &quot;item_count&quot;:2,\n    &quot;item_count_total&quot;:5930\n  },\n  &quot;results&quot;: [\n    { result object }\n  ]\n}</pre>\n\n<h5 id=\"label-JSONP+Data\">JSONP Data</h5>\n\n<p>The Data is returned using JSON, but the return value is wrapped in a\nJavaScript method call. The first argument to the method is the result of\nthe API call, the second is the API Response Code. This makes it easy to\ncheck, if the call was successfull, or not. Use the callback param to pass\nthe method name.</p>\n\n<pre>callback({\n  &quot;conditions&quot;: {\n    &quot;format&quot;: &quot;json&quot;\n  },\n  &quot;meta&quot;: {\n    &quot;item_count&quot;:2,\n    &quot;item_count_total&quot;:5930\n  },\n  &quot;results&quot;: [\n    { result object }\n  ]\n}, 200)</pre>\n<ul><li>\n<p>conditions conditions echoes the parameters that were passed into the\nrequest. This could be filters, format, pagination and so on.</p>\n</li><li>\n<p>meta meta specifies meta information page and total number of pages,\nentries per page and so on.</p>\n</li><li>\n<p>results results is an array of objects. For consistency&#39;s sake, it is\nalways an array, even if only one result is expected.</p>\n</li></ul>\n\n<h2 id=\"label-API+Error+Messages\">API Error Messages</h2>\n\n<p>If the API responds with an HTTP status code with 400 or higher, there will\nbe a descriptive error message. Please make sure your client can handle\nerror codes and display this message to the client. The error messages a\nlocalized.</p>\n","copyright":"&copy; 2014 Sozialhelden e.V.","doc_url":"./api/doc/1.0","api_url":"/api","resources":{"nodes":{"doc_url":"./api/doc/1.0/nodes","api_url":"/api","name":"Nodes","short_description":"Nodes. A node is a geolocation defined by latitude and longitude.","full_description":"","version":"1.0","formats":["json","jsonp","xml"],"metadata":null,"methods":[{"doc_url":"./api/doc/1.0/nodes/index","name":"index","apis":[{"api_url":"/api/nodes","http_method":"GET","short_description":"Retrieve a optionally scoped collection of nodes","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"bbox","full_name":"bbox","description":"\n<p>Filter nodes by a bounding box as comma separated float numbers wich are\nlongitude, latitude values in degrees. For example bbox=13.4,52.0,13.5,52.1</p>\n","required":false,"allow_nil":false,"validator":"Must be an array of Float","expected_type":"array","metadata":{"order":"west,south,east,north"},"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>Filter nodes by a wheelchair status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, limited, no, unknown.","expected_type":"string","metadata":null,"show":true},{"name":"category_id","full_name":"category_id","description":"\n<p>Filter nodes by a category, identified by category id.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"node_type_id","full_name":"node_type_id","description":"\n<p>Filter nodes by a node type, identified by node type id.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"page","full_name":"page","description":"\n<p>For pagination, what page of the results you are on. Default is 1.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"per_page","full_name":"per_page","description":"\n<p>For pagination, how many results to return per page. Default is 200. Max is\n500.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/search","name":"search","apis":[{"api_url":"/api/nodes/search","http_method":"GET","short_description":"Search for nodes by name and other attributes.","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"bbox","full_name":"bbox","description":"\n<p>Filter nodes by a bounding box as comma separated float numbers wich are\nlongitude, latitude values in degrees. For example bbox=13.4,52.0,13.5,52.1</p>\n","required":false,"allow_nil":false,"validator":"Must be an array of Float","expected_type":"array","metadata":{"order":"west,south,east,north"},"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>Filter nodes by a wheelchair status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, limited, no, unknown.","expected_type":"string","metadata":null,"show":true},{"name":"category_id","full_name":"category_id","description":"\n<p>Filter nodes by a category, identified by category id.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"node_type_id","full_name":"node_type_id","description":"\n<p>Filter nodes by a node type, identified by node type id.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"page","full_name":"page","description":"\n<p>For pagination, what page of the results you are on. Default is 1.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"per_page","full_name":"per_page","description":"\n<p>For pagination, how many results to return per page. Default is 200. Max is\n500.</p>\n","required":false,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/show","name":"show","apis":[{"api_url":"/api/nodes/:id","http_method":"GET","short_description":"Show an existing node.","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"bbox","full_name":"bbox","description":"\n<p>Filter nodes by a bounding box as comma separated float numbers wich are\nlongitude, latitude values in degrees. For example bbox=13.4,52.0,13.5,52.1</p>\n","required":false,"allow_nil":false,"validator":"Must be an array of Float","expected_type":"array","metadata":{"order":"west,south,east,north"},"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>Filter nodes by a wheelchair status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, limited, no, unknown.","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/update","name":"update","apis":[{"api_url":"/api/nodes/:id","http_method":"PUT","short_description":"Update an existing node.","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}},{"code":400,"description":"Bad Request ","metadata":{"message":"The server could not understand your request. Verify that request parameters (and content, if any) are valid."}},{"code":406,"description":"Not Acceptable ","metadata":{"message":"Either a parameter is missing or has a wrong value."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"id","full_name":"id","description":"\n<p>Node&#39;s id you want to update</p>\n","required":true,"allow_nil":false,"validator":"Must be Fixnum","expected_type":"numeric","metadata":null,"show":true},{"name":"name","full_name":"name","description":"\n<p>The node&#39;s name.</p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"type","full_name":"type","description":"\n<p>The node&#39;s type, must be one of the available node_type ids</p>\n","required":true,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"lat","full_name":"lat","description":"\n<p>The node&#39;s latitude in degrees.</p>\n","required":true,"allow_nil":false,"validator":"Must be Float","expected_type":"numeric","metadata":null,"show":true},{"name":"lon","full_name":"lon","description":"\n<p>The node&#39;s longitude in degrees.</p>\n","required":true,"allow_nil":false,"validator":"Must be Float","expected_type":"numeric","metadata":null,"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>The node&#39;s wheelchair status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, limited, no, unknown.","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair_description","full_name":"wheelchair_description","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair_toilet","full_name":"wheelchair_toilet","description":"\n<p>The node&#39;s wheelchair toilet status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, no.","expected_type":"string","metadata":null,"show":true},{"name":"street","full_name":"street","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"housenumber","full_name":"housenumber","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"city","full_name":"city","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"postcode","full_name":"postcode","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"website","full_name":"website","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"phone","full_name":"phone","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/create","name":"create","apis":[{"api_url":"/api/nodes","http_method":"POST","short_description":"Create a new node.","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}},{"code":400,"description":"Bad Request ","metadata":{"message":"The server could not understand your request. Verify that request parameters (and content, if any) are valid."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"name","full_name":"name","description":"\n<p>The node&#39;s name.</p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"type","full_name":"type","description":"\n<p>The node&#39;s type, must be one of the available node_type ids</p>\n","required":true,"allow_nil":false,"validator":"Must be Integer","expected_type":"numeric","metadata":null,"show":true},{"name":"lat","full_name":"lat","description":"\n<p>The node&#39;s latitude in degrees.</p>\n","required":true,"allow_nil":false,"validator":"Must be Float","expected_type":"numeric","metadata":null,"show":true},{"name":"lon","full_name":"lon","description":"\n<p>The node&#39;s longitude in degrees.</p>\n","required":true,"allow_nil":false,"validator":"Must be Float","expected_type":"numeric","metadata":null,"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>The node&#39;s wheelchair status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, limited, no, unknown.","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair_description","full_name":"wheelchair_description","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair_toilet","full_name":"wheelchair_toilet","description":"\n<p>The node&#39;s wheelchair toilet status.</p>\n","required":false,"allow_nil":false,"validator":"Must be one of: yes, no.","expected_type":"string","metadata":null,"show":true},{"name":"street","full_name":"street","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"housenumber","full_name":"housenumber","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"city","full_name":"city","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"postcode","full_name":"postcode","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"website","full_name":"website","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"phone","full_name":"phone","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/update_wheelchair","name":"update_wheelchair","apis":[{"api_url":"/api/nodes/:id/update_wheelchair","http_method":"PUT","short_description":"Update wheelchair status for a given node","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}},{"code":404,"description":"Not Found","metadata":{"message":"The resource that you requested does not exist. Verify that any object id provided is valid."}},{"code":406,"description":"Not Acceptable","metadata":{"message":"Either a parameter is missing or has a wrong value."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair","full_name":"wheelchair","description":"\n<p>The node&#39;s wheelchair status.</p>\n","required":true,"allow_nil":false,"validator":"Must be one of: yes, limited, no.","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"./api/doc/1.0/nodes/update_toilet","name":"update_toilet","apis":[{"api_url":"/api/nodes/:id/update_toilet","http_method":"PUT","short_description":"Update toilet status for a given node","deprecated":null}],"formats":["json","jsonp","xml"],"full_description":"","errors":[{"code":401,"description":"Authorization Required","metadata":{"message":"Authentication failed or was not provided. Verify that you have sent valid credentials via an api_key parameter. A 'Www-Authenticate' challenge header will be sent with this type of error response."}},{"code":404,"description":"Not Found","metadata":{"message":"The resource that you requested does not exist. Verify that any object id provided is valid."}},{"code":406,"description":"Not Acceptable","metadata":{"message":"Either a parameter is missing or has a wrong value."}}],"params":[{"name":"api_key","full_name":"api_key","description":"\n<p>You personal API key. Sign up for an account at <a\nhref=\"http://wheelmap.org/users/sign_in\">wheelmap.org/users/sign_in</a></p>\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"wheelchair_toilet","full_name":"wheelchair_toilet","description":"\n<p>The node&#39;s wheelchair toilet status.</p>\n","required":true,"allow_nil":false,"validator":"Must be one of: yes, no.","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]}]}},"link_extension":".html"}}