#map_wrapper
  #minimap
  = link_to t('.link.large_map'), root_path(:locale => I18n.locale, :lat => @node.lat, :lon => @node.lon, :zoom => 18), :class => 'magnify', :id => 'show-on-large-map'



= link_to t('.link.back'), root_path(:locale => I18n.locale, :lat => @node.lat, :lon => @node.lon, :zoom => 18)
%h1
  =@node.name
  %br
  %span.addition
    = link_to t('.link.edit_node'), edit_node_path(@node), :rel => 'nofollow'
    &nbsp;
    = mail_to 'bugs@wheelmap.org', t('.link.report_bug'), :subject => "[Wheelmap] Problem with #{@node.headline}", :body => "(please only write in English or German)\n\nHi,\n\nsomething is wrong with location: #{node_url(@node)}\n\nthe problem is:"
    = link_to t('.link.claim'), claim_node_path(@node), :rel => 'nofollow'

%table#accessibility{:class => "#{dom_class(@node)}"}
  %tr

    %th=t('formtastic.labels.wheelchair')
    %td= t("wheelchairstatus.#{@node.wheelchair}")


  -if @node.wheelchair_description
    %tr
      %th=t('formtastic.labels.wheelchair_description')
      %td{:colspan => 2}= @node.wheelchair_description

  %tr
    %th=t('formtastic.labels.category')

    - @node.category.identifier
    %td{:class => @node.category.identifier}
      - if @node.category
        = t("poi.category.#{@node.category.identifier}")
      - else
        &nbsp;

  %tr
    %th=t('formtastic.labels.type')
    %td
      - if @node.type
        = t("poi.name.#{@node.category.identifier}.#{@node.type}")
      -else
        &nbsp;

  - if @node.tags['addr:street'] || @node.tags['addr:housenumber']
    %tr
      %th=t('formtastic.labels.street')
      %td
        =@node.tags['addr:street']
        =@node.tags['addr:housenumber'] || '&nbsp;'


  - if @node.tags['addr:postcode']
    %tr
      %th=t('formtastic.labels.postcode')
      %td=@node.tags['addr:postcode'] || '&nbsp;'

  - if @node.tags['addr:city']
    %tr
      %th=t('formtastic.labels.city')
      %td=@node.tags['addr:city'] || '&nbsp;'.html_safe

  - if @node.tags['website']
    %tr
      %th=t('formtastic.labels.website')
      %td
        - if url = URI.parse(@node.tags['website']) rescue nil
          %a{:href => url.to_s.html_safe, :rel => 'nofollow', :target => '_blank'}>=url.to_s.html_safe
        - else
          = @node.tags['website']

  - if @node.tags['phone']
    %tr
      %th=t('formtastic.labels.phone')
      %td
        =@node.tags['phone'] || '&nbsp;'


= javascript_include_tag "http://maps.google.com/maps/api/js?sensor=false"

.clear
%hr

%h2 Google Streetview:

%div#streetview{:style => "overflow: hidden; margin-bottom: 10px; width: 980px; height: 250px;"}
  %p#streetview_info

.node-footer
  = link_to t('.show-in-osm'), "http://www.openstreetmap.org/edit?lat=#{@node.lat}&lon=#{@node.lon}&zoom=20", :target => :blank
  = link_to_landing_page(t(".link.listing", :type => @node.node_type.localized_name, :city => @node.region.name), @node.region, @node.wheelchair, @node.node_type, :class => 'right') if @node.region

- content_for :head do
  %title= t('.header.title', :node => @node.headline)
  %meta{:name => 'description', :content => t('header.meta.description')}

- content_for :javascript_constants do
  :javascript
    var lon = #{@node.lon};
    var lat = #{@node.lat};
    var zoom = #{params[:zoom] || 18};
    var language = '#{I18n.locale}';

- content_for :javascript do
  = render :partial => 'shared/google_event_tracking'
  = render :partial => 'shared/google_view_tracking'

  :javascript
    drawmap(defaultControls(), 'minimap');
    jumpTo(#{@node.lon}, #{@node.lat}, 18);
    createDraggableLayer(placesStyle(),#{@node.lon}, #{@node.lat});


    var point = new google.maps.LatLng(#{@node.lat}, #{@node.lon});
    var panorama = new google.maps.StreetViewPanorama(document.getElementById("streetview"));
    var sv = new google.maps.StreetViewService();

    sv.getPanoramaByLocation(point, 100, checkNearestStreetView);

    function checkNearestStreetView(data, status) {
      if (status == google.maps.StreetViewStatus.OK) {

      // Calculate heading:
      // tc1=mod(atan2(sin(lon1-lon2)*cos(lat2),cos(lat1)*sin(lat2)-sin(lat1)*cos(lat2)*cos(lon1-lon2)), 2*pi)
        panorama.setPano(data.location.pano);
        var lat1 = data.location.latLng.lat();
        var lon1 = data.location.latLng.lng();
        var lat2 = #{@node.lat};
        var lon2 = #{@node.lon};
        var pi = Math.PI;
        var tc1 = (Math.atan2(Math.sin(lon1-lon2)*Math.cos(lat2),Math.cos(lat1)*Math.sin(lat2)-Math.sin(lat1)*Math.cos(lat2)*Math.cos(lon1-lon2)) % (Math.PI * 2));
        var heading = (Math.round(tc1 * 180 / Math.PI) + 360) % 360;

        panorama.setPov({
          heading: heading,
          pitch: 0,
          zoom: 1
        });
        panorama.setVisible(true);
      } else {
        panorama.setVisible(false);
        $("#streetview").attr('style', 'height: 30px;');
        $("#streetview_info").text('Ist für diesen Ort leider nicht verfügbar');
      }
    }
